# -*- coding: utf-8 -*-
"""TUGAS ALGORITMA PERTEMUAN KE 6 TAUFAN RIZTIAN ANWARI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d6tJ1AZQJ2H32cq5F1p6ccFhOI21bGb4
"""

def tambah(x, y):
    """Menambahkan dua angka."""
    return x + y

def kurang(x, y):
    """Mengurangkan dua angka."""
    return x - y

def kali(x, y):
    """Mengalikan dua angka."""
    return x * y

def bagi(x, y):
    """Membagi dua angka."""
    if y == 0:
        return "Tidak dapat dibagi dengan nol"
    return x / y

def pangkat(x, y):
    """Menghitung x pangkat y."""
    return x ** y

def faktorial(n):
    """Menghitung faktorial dari n."""
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)

def rata_rata(data):
    """Menghitung rata-rata dari list angka."""
    if not data:
        return 0
    return sum(data) / len(data)

def median(data):
    """Menghitung median dari list angka."""
    data.sort()
    n = len(data)
    if n % 2 == 0:
        # Jika jumlah angka genap, median adalah rata-rata dari dua angka tengah
        mid1 = data[n//2 - 1]
        mid2 = data[n//2]
        return (mid1 + mid2) / 2
    else:
        # Jika jumlah angka ganjil, median adalah angka tengah
        return data[n//2]

def kalkulator():
    """Program kalkulator sederhana."""

    while True:
        print("\nPilih operasi:")
        print("1. Tambah")
        print("2. Kurang")
        print("3. Kali")
        print("4. Bagi")
        print("5. Pangkat")
        print("6. Faktorial")
        print("7. Rata-rata")
        print("8. Median")
        print("0. Keluar")

        pilihan = input("Masukkan nomor operasi: ")

        if pilihan == '0':
            break

        if pilihan in ('1', '2', '3', '4', '5'):
            try:
                angka1 = float(input("Masukkan angka pertama: "))
                angka2 = float(input("Masukkan angka kedua: "))
            except ValueError:
                print("Input tidak valid. Masukkan angka.")
                continue

            if pilihan == '1':
                print("Hasil:", tambah(angka1, angka2))
            elif pilihan == '2':
                print("Hasil:", kurang(angka1, angka2))
            elif pilihan == '3':
                print("Hasil:", kali(angka1, angka2))
            elif pilihan == '4':
                print("Hasil:", bagi(angka1, angka2))
            elif pilihan == '5':
                print("Hasil:", pangkat(angka1, angka2))

        elif pilihan == '6':
            try:
                angka = int(input("Masukkan angka untuk faktorial: "))
            except ValueError:
                print("Input tidak valid. Masukkan angka bulat.")
                continue
            print("Hasil:", faktorial(angka))

        elif pilihan == '7' or pilihan == '8':
            try:
                list_angka = [float(x) for x in input("Masukkan list angka (pisahkan dengan spasi): ").split()]
            except ValueError:
                print("Input tidak valid. Masukkan angka yang dipisahkan spasi.")
                continue

            if pilihan == '7':
                print("Hasil:", rata_rata(list_angka))
            elif pilihan == '8':
                print("Hasil:", median(list_angka))
        else:
            print("Pilihan tidak valid.")

if __name__ == "__main__":
    kalkulator()

def tambah_mahasiswa(data_mahasiswa, nim, nama, nilai):
    """Menambah data mahasiswa baru."""
    data_mahasiswa[nim] = {"nama": nama, "nilai": nilai}
    print(f"Mahasiswa dengan NIM {nim} berhasil ditambahkan.")

def cari_mahasiswa(data_mahasiswa, keyword, berdasarkan="NIM"):
    """Mencari data mahasiswa berdasarkan NIM atau nama."""
    hasil_pencarian = []
    if berdasarkan == "NIM":
        if keyword in data_mahasiswa:
            hasil_pencarian.append({keyword: data_mahasiswa[keyword]})
    elif berdasarkan == "nama":
        for nim, data in data_mahasiswa.items():
            if keyword.lower() in data["nama"].lower():
                hasil_pencarian.append({nim: data})
    else:
        print("Parameter 'berdasarkan' tidak valid. Gunakan 'NIM' atau 'nama'.")
        return None

    if hasil_pencarian:
        return hasil_pencarian
    else:
        print("Mahasiswa tidak ditemukan.")
        return None

def hitung_rata_rata(data_mahasiswa):
    """Menghitung rata-rata nilai semua mahasiswa."""
    if not data_mahasiswa:
        return 0
    total_nilai = sum(data["nilai"] for data in data_mahasiswa.values())
    return total_nilai / len(data_mahasiswa)

def tampilkan_peringkat(data_mahasiswa):
    """Menampilkan data mahasiswa berdasarkan peringkat nilai."""
    if not data_mahasiswa:
        print("Tidak ada data mahasiswa.")
        return

    peringkat = sorted(data_mahasiswa.items(), key=lambda item: item[1]["nilai"], reverse=True)

    print("\nPeringkat Mahasiswa:")
    for i, (nim, data) in enumerate(peringkat):
        print(f"{i+1}. NIM: {nim}, Nama: {data['nama']}, Nilai: {data['nilai']}")

def main():
    """Program utama untuk mengelola data mahasiswa."""
    data_mahasiswa_list = {}

    while True:
        print("\nMenu:")
        print("1. Tambah Mahasiswa")
        print("2. Cari Mahasiswa")
        print("3. Hitung Rata-rata Nilai")
        print("4. Tampilkan Peringkat")
        print("0. Keluar")

        pilihan = input("Masukkan pilihan: ")

        if pilihan == '0':
            break

        if pilihan == '1':
            nim = input("Masukkan NIM: ")
            nama = input("Masukkan Nama: ")
            try:
                nilai = float(input("Masukkan Nilai: "))
            except ValueError:
                print("Nilai harus berupa angka.")
                continue
            tambah_mahasiswa(data_mahasiswa_list, nim, nama, nilai)

        elif pilihan == '2':
            berdasarkan = input("Cari berdasarkan (NIM/nama): ").upper()
            keyword = input("Masukkan kata kunci pencarian: ")
            if berdasarkan == "NIM":
                 hasil = cari_mahasiswa(data_mahasiswa_list, keyword, berdasarkan="NIM")
            elif berdasarkan == "NAMA":
                hasil = cari_mahasiswa(data_mahasiswa_list, keyword, berdasarkan="nama")
            else:
                print("Pilihan tidak valid")
                continue
            if hasil:
                for item in hasil:
                    for nim, data in item.items():
                        print(f"NIM: {nim}, Nama: {data['nama']}, Nilai: {data['nilai']}")

        elif pilihan == '3':
            rata_rata = hitung_rata_rata(data_mahasiswa_list)
            print("Rata-rata nilai seluruh mahasiswa:", rata_rata)

        elif pilihan == '4':
            tampilkan_peringkat(data_mahasiswa_list)

        else:
            print("Pilihan tidak valid.")

if __name__ == "__main__":
    main()

import re
from datetime import datetime

def validasi_email(email):
    """Memvalidasi format email."""
    pattern = r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
    return bool(re.match(pattern, email))

def validasi_nomor_telepon(nomor):
    """Memvalidasi format nomor telepon (contoh sederhana)."""
    pattern = r"^\d{10,15}$"  # Asumsi: 10-15 digit angka
    return bool(re.match(pattern, nomor))

def validasi_tanggal(tanggal, format="%Y-%m-%d"):
    """Memvalidasi format tanggal."""
    try:
        datetime.strptime(tanggal, format)
        return True
    except ValueError:
        return False

def hitung_kata(teks):
    """Menghitung jumlah kata dalam teks."""
    words = teks.split()
    return len(words)

def ubah_format_teks(teks, format="upper"):
    """Mengubah format teks menjadi huruf besar atau kecil."""
    if format == "upper":
        return teks.upper()
    elif format == "lower":
        return teks.lower()
    elif format == "capitalize":
        return teks.capitalize()
    else:
        return teks  # Tidak ada perubahan jika format tidak dikenali

def baca_file(nama_file):
    """Membaca isi file."""
    try:
        with open(nama_file, 'r') as file:
            return file.read()
    except FileNotFoundError:
        print(f"File '{nama_file}' tidak ditemukan.")
        return None

def tulis_file(nama_file, data, mode='w'):
    """Menulis data ke file."""
    try:
        with open(nama_file, mode) as file:
            file.write(data)
        print(f"Data berhasil ditulis ke '{nama_file}'.")
    except Exception as e:
        print(f"Terjadi kesalahan saat menulis ke file: {e}")

def proses_data_dari_file(nama_file, fungsi_proses):
    """Membaca data dari file dan memproses setiap baris menggunakan fungsi yang diberikan."""
    try:
        with open(nama_file, 'r') as file:
            for baris in file:
                hasil = fungsi_proses(baris.strip())  # Hapus whitespace di awal dan akhir baris
                print(hasil)
    except FileNotFoundError:
        print(f"File '{nama_file}' tidak ditemukan.")
    except Exception as e:
        print(f"Terjadi kesalahan saat memproses file: {e}")

def main():
    """Aplikasi CLI untuk utilitas."""
    while True:
        print("\nMenu:")
        print("1. Validasi Email")
        print("2. Validasi Nomor Telepon")
        print("3. Validasi Tanggal")
        print("4. Hitung Kata")
        print("5. Ubah Format Teks")
        print("6. Baca File")
        print("7. Tulis File")
        print("8. Proses Data dari File")
        print("0. Keluar")

        pilihan = input("Masukkan pilihan: ")

        if pilihan == '0':
            break

        elif pilihan == '1':
            email = input("Masukkan email: ")
            print(f"Email valid: {validasi_email(email)}")

        elif pilihan == '2':
            nomor = input("Masukkan nomor telepon: ")
            print(f"Nomor valid: {validasi_nomor_telepon(nomor)}")

        elif pilihan == '3':
            tanggal = input("Masukkan tanggal (YYYY-MM-DD): ")
            print(f"Tanggal valid: {validasi_tanggal(tanggal)}")

        elif pilihan == '4':
            teks = input("Masukkan teks: ")
            print(f"Jumlah kata: {hitung_kata(teks)}")

        elif pilihan == '5':
            teks = input("Masukkan teks: ")
            format_teks = input("Masukkan format (upper/lower/capitalize): ").lower()
            print(f"Hasil: {ubah_format_teks(teks, format_teks)}")

        elif pilihan == '6':
            nama_file = input("Masukkan nama file: ")
            isi_file = baca_file(nama_file)
            if isi_file:
                print("Isi file:\n", isi_file)

        elif pilihan == '7':
            nama_file = input("Masukkan nama file: ")
            data = input("Masukkan data yang akan ditulis: ")
            mode = input("Masukkan mode (w/a): ").lower()
            tulis_file(nama_file, data, mode)

        elif pilihan == '8':
            nama_file = input("Masukkan nama file: ")
            def proses_baris(baris):
                return f"Baris yang diproses: {baris}"  # Contoh fungsi proses
            proses_data_dari_file(nama_file, proses_baris)

        else:
            print("Pilihan tidak valid.")

if __name__ == "__main__":
    main()

def tambah_buku(database, judul, penulis, tahun):
    """Menambahkan buku baru ke database."""
    buku = {
        "judul": judul,
        "penulis": penulis,
        "tahun": tahun,
        "tersedia": True
    }
    database.append(buku)
    print(f"Buku '{judul}' berhasil ditambahkan.")
    return True

def cari_buku(database, judul=None, penulis=None):
    """Mencari buku berdasarkan judul atau penulis."""
    hasil = []
    for buku in database:
        match = True
        if judul and judul.lower() not in buku["judul"].lower():
            match = False
        if penulis and penulis.lower() not in buku["penulis"].lower():
            match = False
        if match:
            hasil.append(buku)
    return hasil

def pinjam_buku(database, judul_buku):
    """Memproses peminjaman buku."""
    for buku in database:
        if buku["judul"].lower() == judul_buku.lower() and buku["tersedia"]:
            buku["tersedia"] = False
            print("Buku berhasil dipinjam")
            return True
    print("Buku tidak tersedia atau tidak ditemukan.")
    return False

def kembalikan_buku(database, judul_buku):
    """Memproses pengembalian buku."""
    for buku in database:
        if buku["judul"].lower() == judul_buku.lower() and not buku["tersedia"]:
            buku["tersedia"] = True
            print("Buku berhasil dikembalikan")
            return True
    print("Buku tidak terdaftar sebagai dipinjam atau tidak ditemukan.")
    return False

def tampilkan_buku(database):
    """Menampilkan semua buku dalam database."""
    if not database:
        print("Tidak ada buku dalam perpustakaan.")
        return

    print("\nDaftar Buku:")
    for i, buku in enumerate(database):
        status = "Tersedia" if buku["tersedia"] else "Dipinjam"
        print(f"{i+1}. Judul: {buku['judul']}, Penulis: {buku['penulis']}, Tahun: {buku['tahun']}, Status: {status}")

def main():
    perpustakaan = []  # Database buku

    while True:
        print("\n=== Aplikasi Manajemen Perpustakaan ===")
        print("1. Tambah Buku")
        print("2. Cari Buku")
        print("3. Pinjam Buku")
        print("4. Kembalikan Buku")
        print("5. Tampilkan Semua Buku")
        print("0. Keluar")

        pilihan = input("Masukkan pilihan: ")

        if pilihan == '0':
            break

        elif pilihan == '1':
            judul = input("Masukkan judul buku: ")
            penulis = input("Masukkan nama penulis: ")
            tahun = input("Masukkan tahun terbit: ")
            tambah_buku(perpustakaan, judul, penulis, tahun)

        elif pilihan == '2':
            kata_kunci = input("Masukkan judul atau penulis buku yang dicari: ")
            hasil_pencarian = cari_buku(perpustakaan, judul=kata_kunci, penulis=kata_kunci)
            if hasil_pencarian:
                print("\nHasil Pencarian:")
                for buku in hasil_pencarian:
                    print(f"Judul: {buku['judul']}, Penulis: {buku['penulis']}, Tahun: {buku['tahun']}")
            else:
                print("Buku tidak ditemukan.")

        elif pilihan == '3':
            judul_buku = input("Masukkan judul buku yang ingin dipinjam: ")
            pinjam_buku(perpustakaan, judul_buku)

        elif pilihan == '4':
            judul_buku = input("Masukkan judul buku yang ingin dikembalikan: ")
            kembalikan_buku(perpustakaan, judul_buku)

        elif pilihan == '5':
            tampilkan_buku(perpustakaan)

        else:
            print("Pilihan tidak valid.")

if __name__ == "__main__":
    main()